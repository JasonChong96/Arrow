// @flow
/**
 * @module Actions/Projects
 * @desc Projects Actions
 */
import { createActions } from 'redux-actions';

import { ActionTypes } from 'constants/index';

export const {
  setProject,
  loadProject,
  loadProjects,
  setProjectOverviews,
  setNewProjectTitle,
  setNewProjectMilestoneName,
  setNewProjectMilestoneDeadline,
  addNewProjectMilestone,
  deleteNewProjectMilestone,
  addNewProjectMember,
  resetNewProject,
  submitNewProject,
  deleteProject,
  loadProjectForEdit,
  patchProject,
  resetEditTask,
  addSubTask,
  setTaskDeadline,
  setTaskTitle,
  setTaskColor,
  setTaskAssignees,
  setTaskMilestones,
  setTaskDescription,
  loadTaskForEdit,
  setSubTaskTitle,
  setSubTaskDescription,
  setSubTaskDeadline,
  setSubTaskAssignees,
  submitDeleteSubTask,
  submitSubTask,
  submitTask,
  patchTask,
  deleteTask,
  deleteSubTask,
  setTaskCompletion,
  resetEditSubTask,
  loadSubTaskForEdit,
  deleteSubTaskAndRedirect,
  submitSubTaskAndRedirect,
  patchSubTaskAndRedirect,
  setPendingJoin,
  joinProject,
  expelMembers,
} = createActions({
  [ActionTypes.SET_PROJECT]: project => ({ project }),
  [ActionTypes.LOAD_PROJECT]: code => ({ code }),
  [ActionTypes.LOAD_PROJECTS]: (reloadCache) => ({ reloadCache }),
  [ActionTypes.SET_PROJECT_OVERVIEWS]: projects => ({ projects }),
  [ActionTypes.SET_NEW_PROJECT_TITLE]: title => ({ title }),
  [ActionTypes.SET_NEW_PROJECT_MILESTONE_NAME]: (index, name) => ({ index, name }),
  [ActionTypes.SET_NEW_PROJECT_MILESTONE_DEADLINE]: (index, deadline) => ({ index, deadline }),
  [ActionTypes.ADD_NEW_PROJECT_MILESTONE]: () => ({}),
  [ActionTypes.DELETE_NEW_PROJECT_MILESTONE]: index => ({ index }),
  [ActionTypes.ADD_NEW_PROJECT_MEMBER]: (name, email) => ({ name, email }),
  [ActionTypes.RESET_NEW_PROJECT]: () => ({}),
  [ActionTypes.SUBMIT_NEW_PROJECT]: () => ({}),
  [ActionTypes.DELETE_PROJECT]: code => ({ code }),
  [ActionTypes.LOAD_PROJECT_FOR_EDIT]: code => ({ code }),
  [ActionTypes.PATCH_PROJECT]: () => ({}),
  [ActionTypes.RESET_EDIT_TASK]: () => ({}),
  [ActionTypes.SET_TASK_COLOR]: color => ({ color }),
  [ActionTypes.SET_TASK_TITLE]: title => ({ title }),
  [ActionTypes.SET_TASK_DEADLINE]: deadline => ({ deadline }),
  [ActionTypes.ADD_SUB_TASK]: () => ({}),
  [ActionTypes.LOAD_TASK_FOR_EDIT]: (code, taskid) => ({ code, taskid }),
  [ActionTypes.SET_TASK_ASSIGNEES]: assignees => ({ assignees }),
  [ActionTypes.SET_TASK_MILESTONES]: milestones => ({ milestones }),
  [ActionTypes.SET_TASK_DESCRIPTION]: description => ({ description }),
  [ActionTypes.SET_SUB_TASK_TITLE]: (index, title) => ({ index, title }),
  [ActionTypes.SET_SUB_TASK_DESCRIPTION]: (index, description) => ({ index, description }),
  [ActionTypes.SET_SUB_TASK_DEADLINE]: (index, deadline) => ({ index, deadline }),
  [ActionTypes.SET_SUB_TASK_ASSIGNEES]: (index, assignees) => ({ index, assignees }),
  [ActionTypes.DELETE_SUB_TASK]: index => ({ index }),
  [ActionTypes.SUBMIT_DELETE_SUB_TASK]: id => ({ id }),
  [ActionTypes.SUBMIT_TASK]: code => ({ code }),
  [ActionTypes.PATCH_TASK]: code => ({ code }),
  [ActionTypes.DELETE_TASK]: (code, taskid) => ({ code, taskid }),
  [ActionTypes.PATCH_SUB_TASK]: index => ({ index }),
  [ActionTypes.SUBMIT_SUB_TASK]: index => ({ index }),
  [ActionTypes.SET_TASK_COMPLETION]: (id, completed, isSubTask, code) => ({
    id,
    completed,
    isSubTask,
    code,
  }),
  [ActionTypes.RESET_EDIT_SUB_TASK]: () => ({}),
  [ActionTypes.LOAD_SUB_TASK_FOR_EDIT]: (code, taskid, subtaskid) => ({ code, taskid, subtaskid }),
  [ActionTypes.DELETE_SUB_TASK_AND_REDIRECT]: (code, subtaskid) => ({ code, subtaskid }),
  [ActionTypes.SUBMIT_SUB_TASK_AND_REDIRECT]: (code, taskid) => ({ code, taskid }),
  [ActionTypes.PATCH_SUB_TASK_AND_REDIRECT]: code => ({ code }),
  [ActionTypes.SET_PENDING_JOIN]: (code, title) => ({ code, title }),
  [ActionTypes.JOIN_PROJECT]: code => ({ code }),
  [ActionTypes.EXPEL_MEMBERS]: (code, members) => ({ code, members }),
});
